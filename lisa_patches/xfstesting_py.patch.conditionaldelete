diff --git a/microsoft/testsuites/xfstests/xfstesting.py b/microsoft/testsuites/xfstests/xfstesting.py
index 55fb0191..fb4f554c 100644
--- a/microsoft/testsuites/xfstests/xfstesting.py
+++ b/microsoft/testsuites/xfstests/xfstesting.py
@@ -23,7 +23,7 @@ from lisa.operating_system import BSD, CBLMariner, Oracle, Redhat, Windows
 from lisa.sut_orchestrator import AZURE, HYPERV
 from lisa.sut_orchestrator.azure.features import AzureFileShare, Nfs
 from lisa.sut_orchestrator.azure.platform_ import AzurePlatform
-from lisa.testsuite import TestResult
+from lisa.testsuite import TestResult, TestStatus
 from lisa.tools import Echo, FileSystem, KernelConfig, Mkfs, Mount, Parted
 from lisa.util import BadEnvironmentStateException, LisaException, generate_random_chars
 from microsoft.testsuites.xfstests.xfstests import Xfstests
@@ -195,9 +195,28 @@ class Xfstesting(TestSuite):
     )
 
     def before_case(self, log: Logger, **kwargs: Any) -> None:
+        global _default_smb_mount, _default_smb_excluded_tests
+        global _default_smb_testcases, _scratch_folder, _test_folder
+
         node = kwargs["node"]
         if isinstance(node.os, Oracle) and (node.os.information.version <= "9.0.0"):
             self.excluded_tests = self.excluded_tests + " btrfs/299"
+        # check for user provided SMB mount options, excluded and included test cases
+        # for azure file share
+        variables: Dict[str, Any] = kwargs["variables"]
+        # check for overrides. pass variables with property case_visible: True
+        # in runbook
+        _default_smb_mount = variables.get("smb_mount_opts", _default_smb_mount)
+        _default_smb_excluded_tests = variables.get(
+            "smb_excluded_tests",
+            _default_smb_excluded_tests,
+        )
+        _default_smb_testcases = variables.get(
+            "smb_testcases",
+            _default_smb_testcases,
+        )
+        _scratch_folder = variables.get("scratch_folder", _scratch_folder)
+        _test_folder = variables.get("test_folder", _test_folder)
 
     @TestCaseMetadata(
         description="""
@@ -574,6 +593,12 @@ class Xfstesting(TestSuite):
                 node.os, "current distro is not enabled with cifs module."
             )
         xfstests = self._install_xfstests(node)
+        # These local variables are needed to track resource retention
+        # on demand / test failure.
+        # This is to ensure that the storage account is not deleted
+        # if the test fails and the keep_environment is set to "always" or "failed"
+        keep_environment = environment.platform.runbook.keep_environment
+        test_failed: bool = False
         azure_file_share = node.features[AzureFileShare]
         random_str = generate_random_chars(string.ascii_lowercase + string.digits, 10)
         file_share_name = f"lisa{random_str}fs"
@@ -592,29 +617,50 @@ class Xfstesting(TestSuite):
             azure_file_share=azure_file_share,
         )
         # Create Xfstest config
-        xfstests.set_local_config(
-            scratch_dev=fs_url_dict[scratch_name],
-            scratch_mnt=_scratch_folder,
-            test_dev=fs_url_dict[file_share_name],
-            test_folder=_test_folder,
-            file_system="cifs",
-            test_section="cifs",
-            mount_opts=mount_opts,
-            testfs_mount_opts=mount_opts,
-            overwrite_config=True,
-        )
-        # Create excluded test file
-        xfstests.set_excluded_tests(_default_smb_excluded_tests)
-        # run the test
-        log.info("Running xfstests against azure file share")
-        xfstests.run_test(
-            test_section="cifs",
-            test_group="cifs/quick",
-            log_path=log_path,
-            result=result,
-            test_cases=_default_smb_testcases,
-            timeout=self.TIME_OUT - 30,
-        )
+        try:
+            xfstests.set_local_config(
+                scratch_dev=fs_url_dict[scratch_name],
+                scratch_mnt=_scratch_folder,
+                test_dev=fs_url_dict[file_share_name],
+                test_folder=_test_folder,
+                file_system="cifs",
+                test_section="cifs",
+                mount_opts=mount_opts,
+                testfs_mount_opts=mount_opts,
+                overwrite_config=True,
+            )
+            # Create excluded test file
+            xfstests.set_excluded_tests(_default_smb_excluded_tests)
+            # run the test
+            log.info("Running xfstests against azure file share")
+            xfstests.run_test(
+                test_section="cifs",
+                test_group="cifs/quick",
+                log_path=log_path,
+                result=result,
+                test_cases=_default_smb_testcases,
+                timeout=self.TIME_OUT - 30,
+            )
+        finally:
+            # If test_failed is true and keep_environment is Always / Failed, we keep
+            # the storage account, else we delete it.
+            if TestStatus.FAILED == result.status:
+                test_failed = True
+            if keep_environment in ["failed", "always"]:
+                if test_failed is True:
+                    log.info("Keeping Azure file share for manual testing.")
+                else:
+                    log.info(
+                        "Keeping Azure file share as keep_environment is set to 'True'."
+                    )
+            else:
+                log.info(
+                    "Deleting Azure file share as keep_environment is set to 'False'."
+                )
+                # this will ensure that the expensive storage resources are decom
+                # before the test case ends.
+                # This is important to avoid incurring unnecessary costs.
+                azure_file_share.delete_azure_fileshare([file_share_name, scratch_name])
 
     def after_case(self, log: Logger, **kwargs: Any) -> None:
         try:
